<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="12" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="21491" started-at="2016-10-30T19:15:19Z" finished-at="2016-10-30T19:15:40Z">
    <groups>
    </groups>
    <test name="testingPageObjects" duration-ms="21491" started-at="2016-10-30T19:15:19Z" finished-at="2016-10-30T19:15:40Z">
      <class name="testCode.PageObjectChecking">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="setUp" is-config="true" duration-ms="7747" started-at="2016-10-30T22:15:19Z" finished-at="2016-10-30T22:15:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testingLogin(boolean, java.lang.String, java.lang.String)[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="testingLogin" duration-ms="6118" started-at="2016-10-30T22:15:27Z" data-provider="LoginTest" finished-at="2016-10-30T22:15:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[epam]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testingLogin -->
        <test-method status="PASS" signature="testingLogin(boolean, java.lang.String, java.lang.String)[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="testingLogin" duration-ms="854" started-at="2016-10-30T22:15:33Z" data-provider="LoginTest" finished-at="2016-10-30T22:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testingLogin -->
        <test-method status="PASS" signature="testingLogin(boolean, java.lang.String, java.lang.String)[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="testingLogin" duration-ms="1027" started-at="2016-10-30T22:15:34Z" data-provider="LoginTest" finished-at="2016-10-30T22:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[epam]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testingLogin -->
        <test-method status="FAIL" signature="goingToPage()[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="goingToPage" duration-ms="3314" started-at="2016-10-30T22:15:35Z" finished-at="2016-10-30T22:15:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at testCode.PageObjectChecking.goingToPage(PageObjectChecking.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goingToPage -->
        <test-method status="PASS" signature="testingCheckBoxElements(java.lang.String)[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="testingCheckBoxElements" duration-ms="105" started-at="2016-10-30T22:15:38Z" data-provider="testingCheckBoxElements" finished-at="2016-10-30T22:15:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Water]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testingCheckBoxElements -->
        <test-method status="PASS" signature="testingCheckBoxElements(java.lang.String)[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="testingCheckBoxElements" duration-ms="96" started-at="2016-10-30T22:15:38Z" data-provider="testingCheckBoxElements" finished-at="2016-10-30T22:15:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Earth]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testingCheckBoxElements -->
        <test-method status="PASS" signature="testingCheckBoxElements(java.lang.String)[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="testingCheckBoxElements" duration-ms="94" started-at="2016-10-30T22:15:39Z" data-provider="testingCheckBoxElements" finished-at="2016-10-30T22:15:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Wind]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testingCheckBoxElements -->
        <test-method status="PASS" signature="testingCheckBoxElements(java.lang.String)[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="testingCheckBoxElements" duration-ms="98" started-at="2016-10-30T22:15:39Z" data-provider="testingCheckBoxElements" finished-at="2016-10-30T22:15:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Fire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testingCheckBoxElements -->
        <test-method status="PASS" signature="testingRadioButtonsElements(java.lang.String)[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="testingRadioButtonsElements" duration-ms="96" started-at="2016-10-30T22:15:39Z" data-provider="testingRadioButtonsElements" finished-at="2016-10-30T22:15:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Gold]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testingRadioButtonsElements -->
        <test-method status="PASS" signature="testingRadioButtonsElements(java.lang.String)[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="testingRadioButtonsElements" duration-ms="98" started-at="2016-10-30T22:15:39Z" data-provider="testingRadioButtonsElements" finished-at="2016-10-30T22:15:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Silver]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testingRadioButtonsElements -->
        <test-method status="PASS" signature="testingRadioButtonsElements(java.lang.String)[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="testingRadioButtonsElements" duration-ms="105" started-at="2016-10-30T22:15:39Z" data-provider="testingRadioButtonsElements" finished-at="2016-10-30T22:15:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bronze]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testingRadioButtonsElements -->
        <test-method status="PASS" signature="testingRadioButtonsElements(java.lang.String)[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="testingRadioButtonsElements" duration-ms="123" started-at="2016-10-30T22:15:39Z" data-provider="testingRadioButtonsElements" finished-at="2016-10-30T22:15:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Selen]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testingRadioButtonsElements -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testCode.PageObjectChecking@12d44bc]" name="tearDown" is-config="true" duration-ms="1118" started-at="2016-10-30T22:15:39Z" finished-at="2016-10-30T22:15:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCode.PageObjectChecking -->
    </test> <!-- testingPageObjects -->
  </suite> <!-- Suite -->
</testng-results>
